/* =====================
   TIPTAP NODES STYLES
   ===================== */

/* Image Node - 에디터 전용 스타일 */
.tiptap.ProseMirror img:not([data-type="emoji"] img).ProseMirror-selectednode {
  outline-color: #2563eb; /* blue-600 */
}

.dark
  .tiptap.ProseMirror
  img:not([data-type="emoji"] img).ProseMirror-selectednode {
  outline-color: #60a5fa; /* blue-400 */
}

.tiptap.ProseMirror .tiptap-thread:has(> img) {
  margin: 2rem 0;
}

.tiptap.ProseMirror .tiptap-thread:has(> img) img {
  outline: 0.125rem solid transparent;
  border-radius: var(--tt-radius-xs, 0.25rem);
}

.tiptap.ProseMirror .tiptap-thread img {
  margin: 0;
}

/* List Node */
.tiptap.ProseMirror {
  --tt-checklist-bg-color: var(--tt-alpha-border-subtle);
  --tt-checklist-bg-active-color: #18181b; /* zinc-900 */
  --tt-checklist-border-color: var(--tt-alpha-border);
  --tt-checklist-border-active-color: #18181b; /* zinc-900 */
  --tt-checklist-check-icon-color: rgba(255, 255, 255, 1);
  --tt-checklist-text-active: #71717a; /* zinc-500 */
}

.dark .tiptap.ProseMirror {
  --tt-checklist-bg-color: var(--tt-alpha-border-subtle);
  --tt-checklist-bg-active-color: #fafafa; /* zinc-50 */
  --tt-checklist-border-color: var(--tt-alpha-border);
  --tt-checklist-border-active-color: #fafafa; /* zinc-50 */
  --tt-checklist-check-icon-color: rgba(14, 14, 17, 1);
  --tt-checklist-text-active: #71717a; /* zinc-500 */
}

.tiptap.ProseMirror ul[data-type="taskList"] {
  padding-left: 0.25em;
}

.tiptap.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.tiptap.ProseMirror ul[data-type="taskList"] li:not(:has(> p:first-child)) {
  list-style-type: none;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div > p {
  opacity: 0.5;
  text-decoration: line-through;
}

.tiptap.ProseMirror
  ul[data-type="taskList"]
  li[data-checked="true"]
  > div
  > p
  span {
  text-decoration: line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label {
  position: relative;
  padding-top: 0.375rem;
  padding-right: 0.5rem;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span {
  display: block;
  width: 1em;
  height: 1em;
  border: 1px solid var(--tt-checklist-border-color);
  border-radius: var(--tt-radius-xs, 0.25rem);
  position: relative;
  cursor: pointer;
  background-color: var(--tt-checklist-bg-color);
  transition:
    background-color 80ms ease-out,
    border-color 80ms ease-out;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.75em;
  height: 0.75em;
  background-color: var(--tt-checklist-check-icon-color);
  opacity: 0;
  -webkit-mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E")
    center/contain no-repeat;
  mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E")
    center/contain no-repeat;
}

.tiptap.ProseMirror
  ul[data-type="taskList"]
  li
  label
  input[type="checkbox"]:checked
  + span {
  background: var(--tt-checklist-bg-active-color);
  border-color: var(--tt-checklist-border-active-color);
}

.tiptap.ProseMirror
  ul[data-type="taskList"]
  li
  label
  input[type="checkbox"]:checked
  + span::before {
  opacity: 1;
}

.tiptap.ProseMirror ul[data-type="taskList"] li div {
  flex: 1 1 0%;
  min-width: 0;
}

/* Paragraph Node - 에디터 전용 스타일 */
.tiptap.ProseMirror {
  --tt-collaboration-carets-label: #18181b; /* zinc-900 */
  --thread-text: #18181b; /* zinc-900 */
  --placeholder-color: var(--tt-alpha-muted);
  --thread-bg-color: var(--tt-color-yellow-inc-2);
}

.dark .tiptap.ProseMirror {
  --tt-collaboration-carets-label: #27272a; /* zinc-800 */
  --thread-text: #fafafa; /* zinc-50 */
  --placeholder-color: var(--tt-alpha-muted);
  --thread-bg-color: var(--tt-color-yellow-dec-2);
}

.tiptap.ProseMirror > * {
  position: relative;
}

.tiptap.ProseMirror {
  white-space: pre-wrap;
  outline: none;
  caret-color: var(--tt-cursor-color);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection)
  .selection::selection {
  background: transparent;
}

.tiptap.ProseMirror .selection {
  display: inline;
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror
  .ProseMirror-selectednode:not(img):not(pre):not(.react-renderer) {
  border-radius: var(--tt-radius-md);
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror .ProseMirror-hideselection {
  caret-color: transparent;
}

.tiptap.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.tiptap.ProseMirror s span {
  text-decoration: line-through;
}

.tiptap.ProseMirror u span {
  text-decoration: underline;
}

.tiptap.ProseMirror .tiptap-ai-insertion {
  color: var(--tiptap-ai-insertion-color);
}

.tiptap.ProseMirror .collaboration-carets__caret {
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;
  pointer-events: none;
  margin-left: -1px;
  margin-right: -1px;
  position: relative;
  word-break: normal;
}

.tiptap.ProseMirror .collaboration-carets__label {
  color: var(--tt-collaboration-carets-label);
  border-radius: 0.25rem;
  border-bottom-left-radius: 0;
  font-size: 0.75rem;
  font-weight: 600;
  left: -1px;
  line-height: 1;
  padding: 0.125rem 0.375rem;
  position: absolute;
  top: -1.3em;
  user-select: none;
  white-space: nowrap;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  transition:
    color 0.2s ease-in-out,
    background-color 0.2s ease-in-out;
  color: var(--thread-text);
  border-bottom: 2px dashed var(--tt-color-yellow-base);
  font-weight: 600;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected,
.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: var(--thread-bg-color);
  border-bottom-color: transparent;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
  outline: 0.125rem solid var(--tt-color-yellow-base);
  border-radius: var(--tt-radius-xs, 0.25rem);
  overflow: hidden;
  width: fit-content;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(
    img
  ).tiptap-thread--selected {
  outline-width: 0.25rem;
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(
    img
  ).tiptap-thread--hovered {
  outline-width: 0.25rem;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
  border-radius: 0.25rem;
  border-bottom: 0.125rem dashed var(--tt-color-yellow-base);
  padding-bottom: 0.5rem;
  outline: 0.25rem solid transparent;
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(
    :has(img)
  ).tiptap-thread--hovered,
.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(
    :has(img)
  ).tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror
  .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  border-color: transparent;
  opacity: 0.5;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--block:has(.react-renderer) {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.is-empty:not(.with-slash)[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  )::before {
  content: attr(data-placeholder);
}

.is-empty.with-slash[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  )::before {
  content: "Write, type '/' for commands…";
  font-style: italic;
}

.is-empty[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  ):before {
  pointer-events: none;
  height: 0;
  position: absolute;
  width: 100%;
  text-align: inherit;
  left: 0;
  right: 0;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
  color: var(--placeholder-color);
}

.prosemirror-dropcursor-block,
.prosemirror-dropcursor-inline {
  background: #52525b !important; /* zinc-600 */
  border-radius: 0.25rem;
  margin-left: -1px;
  margin-right: -1px;
  width: 100%;
  height: 0.188rem;
  cursor: grabbing;
}

.dark .prosemirror-dropcursor-block,
.dark .prosemirror-dropcursor-inline {
  background: #a1a1aa !important; /* zinc-400 */
}
